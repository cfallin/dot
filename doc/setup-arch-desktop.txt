- Boot from USB stick of recent Arch Linux image (I used 2015.06.01)
- use fdisk on /dev/sda: remove all partitions, then create:
  - 500M Linux (type 83) for /boot
  - 220G Linux (type 83) for /
  - 3G Linux swap (type 82) for swap
  - (and leave other disks alone)
- Format everything:
  - mkfs.ext2 /dev/sda1
  - mkfs.ext4 /dev/sda2
  - mkswap /dev/sda3
  - create other filesystems if starting from scratch
    - /home as XFS on /dev/sdc
    - /big as btrfs (TODO: switch back to ext4 or XFS) on /dev/sdd
    - /backup as ext4 on /dev/sde
- Mount everything under /mnt
- ensure network connectivity (dhclient enp0s2)
- pacstrap /mnt base
- genfstab -p /mnt >> /mnt/etc/fstab
- arch-chroot /mnt
- In the chroot:
  - set up /etc/hostname and /etc/localtime (symlink to /usr/share/zoneinfo/...)
  - pacman -S grub dosfstools
  - grub-install /dev/sda
  - passwd (set root password)
- leave chroot, umount -R /mnt, reboot, ensure BIOS boots from hard drive

- On next boot:
  - blkid to see UUIDs; add disks at mounts (/home, /big, /backup)
  - get a network connection (dhcpcd en0... if necessary)
  - pacman -S base-devel vim tmux wget bc openssh NetworkManager
  - set up netctl
    - create /etc/netctl/enp2s0:

      Interface=enp2s0
      Connection=ethernet
      IP=static
      Address=('10.1.1.1/24')
      Gateway=('10.1.1.3')
      DNS=('8.8.8.8', '8.8.4.4')

    - systemctl enable netctl@enp2s0
    - systemctl start netctl@enp2s0

  - pacman -S xorg xorg-apps xorg-fonts xf86-video-intel xfce4 slim
  - enable slimd: systemctl enable slimd.service
  - generate locale and set it:
    - edit /etc/locale.gen and uncomment line: "en_US.UTF-8 UTF-8"
    - run locale-gen
    - edit /etc/locale.conf and ensure file is: "LANG=en_US.UTF-8"

- Install packages:

    [enable multilib in pacman.conf]
    [add archlinuxfr repo to pacman.conf -- google yaourt]

    - from pacman:

        sudo git python scons emacs gvim tmux ruby firefox thunderbird pidgin gnome
        rhythmbox gthumb gimp cmake boost jdk7-openjdk clojure strace valgrind
        nmap vlc sshfs encfs clang llvm s3cmd mutt abook irssi sshpass fuse  nasm
        yasm keychain keepassx enscript subversion qt4 qt5 protobuf zlib acpi
        chromium gnupg redshift rsync openvpn ntp gnome-alsamixer xscreensaver
        dnsutils traceroute network-manager-applet rpmextract nodejs docker
        virtualbox virtualbox-host-dkms ghc rust tcl tk qemu yaourt alsa-utils
        lib32-libpulse gdb cups inkscape libreoffice texlive-most ack
        foomatic-db ghostscript gsfonts a2ps npm duplicity evince
        links irssi rubyripper ruby-gtk2 unzip

    - from AUR (yaourt):

        jitsi midori-flash skype

- Enable a few services (pacman -S ntp dkms cronie):

  systemctl enable sshd.service; systemctl start sshd.service
  systemctl enable ntpd.service; systemctl start ntpd.service
  systemctl enable dkms.service; systemctl start dkms.service
  systemctl enable cronie.service; systemctl start cronie.service

- Ensure /etc/cron.daily/backup exists and is executable.

- IO tuning:
  - For any ssd (sda sdc), create a systemd service:
    - /usr/lib/systemd/system/io-scheduler-settings.service:

      [Unit]
      Description=I/O scheduler settings
      After=local-fs.target

      [Service]
      Type=oneshot
      ExecStart=/bin/bash -c 'echo deadline > /sys/block/sdc/queue/scheduler'
      TimeoutSec=0
      RemainAfterExit=yes

      [Install]
      WantedBy=multi-user.target

    - systemctl enable io-scheduler-settings
    - systemctl start io-scheduler-settings

- Create user:

    groupadd -g 1000 cfallin
    useradd -g 1000 -u 1000 cfallin
    passwd cfallin
    edit /etc/group, add cfallin to 'wheel'
    install sudo, edit /etc/sudoers, allow sudo (if desired)

- Steam setup:

  - pacman -S steam
  - install `steam-fonts` AUR package (git clone, pkgbuild -sri)
  - ln -s /usr/lib32/ld-linux.so.2 /lib/
  - steam

- Other misc setup:

  - install switchboard (github.com/nixprime/switchboard)
    - add systemd service and enable
    - add aliases to /etc/hosts
